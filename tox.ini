[tox]
isolated_build = True
envlist = py36,py37,py38,black,flake8,pylint,bandit,mypy,docs,coverage

[flake8]
exclude = .git,__pycache__,docs,build,dist,.tox,vendor
show-source = True
max-line-length = 88

[coverage:run]
branch = True

omit =
    *pasee/storage_backend/pgsql_backend/pgsql.py*
    */vendor/*
    .tox/*

[coverage:report]
show_missing = True
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

ignore_errors = False
fail_under = 100

[testenv]
deps = -rrequirements-dev.txt
commands = coverage run -m pytest
setenv =
  CONFIG = tests/config.yml
  COVERAGE_FILE={toxworkdir}/.coverage.{envname}

[testenv:coverage]
depends = py36, py37, py38
parallel_show_output = True
skip_install = True
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands =
  coverage combine
  coverage report --fail-under 100

[testenv:flake8]
skip_install = true
commands =
    flake8 pasee/

[testenv:pylint]
commands =
    pylint -rn pasee/ --ignore=vendor

[testenv:mypy]
commands =
    mypy --ignore-missing-imports pasee/

[testenv:bandit]
skip_install = true
commands =
    bandit -r pasee/ --exclude pasee/vendor

[testenv:black]
skip_install = true
commands =
    black --check pasee/ tests/

[testenv:docs]
skip_install = true
commands = sphinx-build -W -b html docs docs/_build/html
